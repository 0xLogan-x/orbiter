PREREQUISITES
=============

To build Orbiter from its sources you need a C++ compiler able to create Windows binaries.
Orbiter has been built successfully with Visual Studio 2019 Community
https://visualstudio.microsoft.com/downloads/

This version also has built-in support for CMake. If you use a different version or want to
configure the Orbiter build separately, you also need to install CMake.
https://cmake.org/download/

If you want to build the Orbiter documentation, you need a tool that can compile
OpenDocument Text files (ODT) into PDF files. By default, the Orbiter build is configured to
use LibreOffice for this, but Microsoft Word or other tools may also work, if you
reconfigure the build parameters accordingly.
https://www.libreoffice.org/download/download/

To also build the Orbiter Technical Notes, you need LaTeX. Multiple LaTeX distros for
Windows are available, for example MiKTeX.
https://miktex.org/download


BUILDING ORBITER
================
After cloning the Orbiter Git repository, you can either

- Load the Orbiter download directory as a local directory into VS2019 or later.
  
- Select Project | CMake Settings for Orbiter
  to check the build settings and make sure that all required components are found
  
- Select Project | Configure Orbiter
  This will configure the CMake build files.

- Select Build | Build All
  to build Orbiter and all its components.
  
Or, run CMake externally:

- Create a build directory separate from the Orbiter source directory.

- Run CMake, and select the correct source and build directories.

- Select Configure, and pick the Win32 platform

- Edit options as required.

- Select Generate, then close CMake

- This should have generated a solution file (Orbiter.sln) in the build directory.
  Load this into Visual Studio, and Build All.
  
  
TROUBLESHOOTING
===============
If you get errors during build, in particular when building documentation (pdf from
odt or latex sources), try disabling multithreaded build support (limit to a single
thread). Some of the document converters/compilers you are using may not be
thread-safe.